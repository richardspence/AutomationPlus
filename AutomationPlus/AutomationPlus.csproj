<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\ILRepack.2.0.30\build\ILRepack.props" Condition="Exists('..\packages\ILRepack.2.0.30\build\ILRepack.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{00FE2C81-804E-4AFC-A9BC-C6E50D154A74}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>AutomationPlus</RootNamespace>
    <AssemblyName>AutomationPlus</AssemblyName>
    <TargetFrameworkVersion>v4.7.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
    <TargetFrameworkProfile />
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>portable</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup>
    <RunPostBuildEvent>Always</RunPostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <Version Condition="'$(Version)' == ''">1.0.0.0</Version>
    <FileVersion Condition="'$(FileVersion)' == ''">$(Version)</FileVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Packed|AnyCPU'">
    <OutputPath>bin\Packed\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <LangVersion>7.3</LangVersion>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="0Harmony">
      <HintPath>..\lib\0Harmony.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Assembly-CSharp, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OniStubs.2.0.0\lib\Assembly-CSharp.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Assembly-CSharp-firstpass, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\OniStubs.2.0.0\lib\Assembly-CSharp-firstpass.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=7.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>..\packages\Newtonsoft.Json.7.0.1\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="PLib, Version=4.17.1.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\PLib.4.17.1\lib\net471\PLib.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Runtime.InteropServices.RuntimeInformation" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="Unity.TextMeshPro">
      <HintPath>..\lib\Unity.TextMeshPro.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>..\lib\UnityEngine.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>..\lib\UnityEngine.CoreModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.ImageConversionModule">
      <HintPath>..\lib\UnityEngine.ImageConversionModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>..\lib\UnityEngine.InputLegacyModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.TextRenderingModule">
      <HintPath>..\lib\UnityEngine.TextRenderingModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>..\lib\UnityEngine.UI.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.UIModule">
      <HintPath>..\lib\UnityEngine.UIModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UnityWebRequestModule">
      <HintPath>..\lib\UnityEngine.UnityWebRequestModule.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Alu8Gate.cs" />
    <Compile Include="Alu8GateConfig.cs" />
    <Compile Include="Alu8GateStrings.cs" />
    <Compile Include="AluGate.cs" />
    <Compile Include="AluGateConfig.cs" />
    <Compile Include="DisplayAdaptorSideScreen.cs" />
    <Compile Include="ListOption.cs" />
    <Compile Include="AluGateSideScreen.cs" />
    <Compile Include="BuildingUtils.cs" />
    <Compile Include="DelayGateConfig.cs" />
    <Compile Include="DisplayAdaptorConfig.cs" />
    <Compile Include="DisplayAdaptor.cs" />
    <Compile Include="AluGateStrings.cs" />
    <Compile Include="DisplayAdaptorStrings.cs" />
    <Compile Include="DelayGate2.cs" />
    <Compile Include="PnrgGateAnimations.cs" />
    <Compile Include="PnrgGateStrings.cs" />
    <Compile Include="DelayGateStrings.cs" />
    <Compile Include="GameStrings.cs" />
    <Compile Include="Patches.cs" />
    <Compile Include="PnrgGate.cs" />
    <Compile Include="PnrgGateConfig.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="StringUtils.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="anim\assets\4bit_alu\4bit_alu.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\4bit_alu\4bit_alu_anim.bytes">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\4bit_alu\4bit_alu_build.bytes">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\8bit_alu\8bit_alu_anim.bytes">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\8bit_alu\8bit_alu_build.bytes">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\display_adaptor\display_adaptor_anim.bytes">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\display_adaptor\display_adaptor_build.bytes">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\logic_delay\logic_delay_anim.bytes">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\logic_delay\logic_delay_build.bytes">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\logic_generator_random\logic_generator_random_anim.bytes">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\logic_generator_random\logic_generator_random_build.bytes">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <None Include="app.config" />
    <None Include="mod.yaml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="mod_info.yaml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="anim\assets\logic_generator_random\logic_generator_random.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Content Include="anim\assets\8bit_alu\8bit_alu.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\display_adaptor\display_adaptor.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="anim\assets\logic_delay\logic_delay.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="BeforeBuild" BeforeTargets="Build">
    <ItemGroup>
      <AssemblyAttributes Include="AssemblyVersion">
        <_Parameter1>$(Version)</_Parameter1>
      </AssemblyAttributes>
      <AssemblyAttributes Include="AssemblyFileVersion">
        <_Parameter1>$(FileVersion)</_Parameter1>
      </AssemblyAttributes>
    </ItemGroup>
    <MakeDir Directories="$(IntermediateOutputPath)" />
    <WriteCodeFragment Language="C#" OutputFile="$(IntermediateOutputPath)Version.cs" AssemblyAttributes="@(AssemblyAttributes)" />
    <ItemGroup>
      <Compile Include="$(IntermediateOutputPath)Version.cs" />
    </ItemGroup>
  </Target>
  <PropertyGroup>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\ILRepack.2.0.30\build\ILRepack.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\ILRepack.2.0.30\build\ILRepack.props'))" />
    <Error Condition="!Exists('..\packages\ILRepack.Lib.MSBuild.Task.2.0.29\build\ILRepack.Lib.MSBuild.Task.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\ILRepack.Lib.MSBuild.Task.2.0.29\build\ILRepack.Lib.MSBuild.Task.targets'))" />
  </Target>
  <!-- <Import Project="..\packages\ILRepack.Lib.MSBuild.Task.2.0.29\build\ILRepack.Lib.MSBuild.Task.targets" Condition="Exists('..\packages\ILRepack.Lib.MSBuild.Task.2.0.29\build\ILRepack.Lib.MSBuild.Task.targets')" /> -->
  <UsingTask AssemblyFile="..\packages\ILRepack.Lib.MSBuild.Task.2.0.29\build\ILRepack.Lib.MSBuild.Task.dll" TaskName="ILRepack" />
  <Target Name="ILRepack" AfterTargets="Build" Condition="$(Configuration.Contains('Packed')) and !Exists('$(ILRepackTargetsFile)')">
    <PropertyGroup>
      <WorkingDirectory>..\lib</WorkingDirectory>
    </PropertyGroup>
    <ItemGroup>
      <InputAssemblies Include="$(OutputPath)PLib.dll" />
      <InputAssemblies Include="$(OutputPath)$(AssemblyName).dll" />
    </ItemGroup>
    <ILRepack Parallel="true" Internalize="true" DebugInfo="true" AllowDuplicateResources="false" InputAssemblies="@(InputAssemblies)" TargetKind="Dll" LibraryPath="$(WorkingDirectory)" OutputFile="$(OutputPath)$(AssemblyName).dll" />
  </Target>
  <Target AfterTargets="ILRepack" Name="CleanReferenceCopyLocalPaths" Condition="$(Configuration.Contains('Release')) and !Exists('$(ILRepackTargetsFile)') and '$(ClearOutputDirectory)' != 'False'">
    <!-- <Delete Files="@(ReferenceCopyLocalPaths->'$(OutDir)%(DestinationSubDirectory)%(Filename)%(Extension)')" /> -->
    <ItemGroup>
      <FilesToDelete Include="$(OutputPath)*.dll" Exclude="$(OutputPath)$(AssemblyName).dll" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete->'$(OutputPath)%(Filename)%(Extension)')" />
  </Target>
  <Target Name="CopyToLocal" AfterTargets="CleanReferenceCopyLocalPaths">
    <!-- set security on binaries-->
    <Exec Command="xcopy /Y /s $(TargetDir) $(USERPROFILE)\OneDrive\Documents\Klei\OxygenNotIncluded\mods\Local\$(ProjectName)" Condition="Exists('$(USERPROFILE)\OneDrive\Documents\Klei\OxygenNotIncluded')" />
    <Exec Command="xcopy /Y /s $(TargetDir) $(USERPROFILE)\Documents\Klei\OxygenNotIncluded\mods\Local\$(ProjectName)" Condition="Exists('$(USERPROFILE)\Documents\Klei\OxygenNotIncluded')" />
  </Target>
</Project>